{
    "Comment": "Conform Workflow",
    "StartAt": "01-validate-workflow-input",
    "States": {
        "01-validate-workflow-input": {
            "Type": "Task",
            "Resource": "${lambda-01-validate-workflow-input}",
            "Next": "02-move-content-to-file-repository-parent"
        },
        "02-move-content-to-file-repository-parent": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "02-move-content-to-file-repository",
                    "States": {
                        "02-move-content-to-file-repository": {
                            "Type": "Task",
                            "Resource": "${lambda-02-move-content-to-file-repository}",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "02-wait-for-job-completion",
                    "States": {
                        "02-wait-for-job-completion": {
                            "Type": "Task",
                            "Resource": "${job-completion-activity}",
                            "TimeoutSeconds": 3600,
                            "HeartbeatSeconds": 1800,
                            "End": true
                        }
                    }
                }
            ],
            "Next": "03-create-media-asset"
        },
        "03-create-media-asset": {
            "Type": "Task",
            "Resource": "${lambda-03-create-media-asset}",
            "Next": "04-extract-technical-metadata-parent"
        },
        "04-extract-technical-metadata-parent": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "04-extract-technical-metadata",
                    "States": {
                        "04-extract-technical-metadata": {
                            "Type": "Task",
                            "Resource": "${lambda-04-extract-technical-metadata}",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "04-wait-for-job-completion",
                    "States": {
                        "04-wait-for-job-completion": {
                            "Type": "Task",
                            "Resource": "${job-completion-activity}",
                            "TimeoutSeconds": 3600,
                            "HeartbeatSeconds": 1800,
                            "End": true
                        }
                    }
                }
            ],
            "Next": "05-register-technical-metadata-parent"
        },
        "05-register-technical-metadata-parent": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "05-register-technical-metadata",
                    "States": {
                        "05-register-technical-metadata": {
                            "Type": "Task",
                            "Resource": "${lambda-05-register-technical-metadata}",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "05-wait-for-job-completion",
                    "States": {
                        "05-wait-for-job-completion": {
                            "Type": "Task",
                            "Resource": "${job-completion-activity}",
                            "TimeoutSeconds": 3600,
                            "HeartbeatSeconds": 1800,
                            "End": true
                        }
                    }
                }
            ],
            "Next": "06-decide-transcode-requirements"
        },
        "06-decide-transcode-requirements": {
            "Type": "Task",
            "Resource": "${lambda-06-decide-transcode-requirements}",
            "Next": "choice-transcode-step"
        },
        "choice-transcode-step": {
            "Type": "Choice",
            "Choices":[
                {
                    "Variable": "$.workflow_param.transcode.type",
                    "StringEquals": "short",
                    "Next": "07a-short-transcode-parent"
                },
                {
                    "Variable": "$.workflow_param.transcode.type",
                    "StringEquals": "long",
                    "Next": "07b-long-transcode-parent"
                },
                {
                    "Variable": "$.workflow_param.transcode.type",
                    "StringEquals": "none",
                    "Next": "08-register-proxy-essence-parent"
                }
            ]
        },
        "07a-short-transcode-parent": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "07a-short-transcode",
                    "States": {
                        "07a-short-transcode": {
                            "Type": "Task",
                            "Resource": "${lambda-07a-short-transcode}",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "07a-wait-for-job-completion",
                    "States": {
                        "07a-wait-for-job-completion": {
                            "Type": "Task",
                            "Resource": "${job-completion-activity}",
                            "TimeoutSeconds": 3600,
                            "HeartbeatSeconds": 1800,
                            "End": true
                        }
                    }
                }
            ],
            "Next": "08-register-proxy-essence-parent"
        },
        "07b-long-transcode-parent": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "07b-long-transcode",
                    "States": {
                        "07b-long-transcode": {
                            "Type": "Task",
                            "Resource": "${lambda-07b-long-transcode}",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "07b-wait-for-job-completion",
                    "States": {
                        "07b-wait-for-job-completion": {
                            "Type": "Task",
                            "Resource": "${job-completion-activity}",
                            "TimeoutSeconds": 3600,
                            "HeartbeatSeconds": 1800,
                            "End": true
                        }
                    }
                }
            ],
            "Next": "08-register-proxy-essence-parent"
        },
        "08-register-proxy-essence-parent": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "08-register-proxy-essence",
                    "States": {
                        "08-register-proxy-essence": {
                            "Type": "Task",
                            "Resource": "${lambda-08-register-proxy-essence}",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "08-wait-for-job-completion",
                    "States": {
                        "08-wait-for-job-completion": {
                            "Type": "Task",
                            "Resource": "${job-completion-activity}",
                            "TimeoutSeconds": 3600,
                            "HeartbeatSeconds": 1800,
                            "End": true
                        }
                    }
                }
            ],
            "Next": "09-copy-proxy-to-website-storage-parent"
        },
        "09-copy-proxy-to-website-storage-parent": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "09-copy-proxy-to-website-storage",
                    "States": {
                        "09-copy-proxy-to-website-storage": {
                            "Type": "Task",
                            "Resource": "${lambda-09-copy-proxy-to-website-storage}",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "09-wait-for-job-completion",
                    "States": {
                        "09-wait-for-job-completion": {
                            "Type": "Task",
                            "Resource": "${job-completion-activity}",
                            "TimeoutSeconds": 3600,
                            "HeartbeatSeconds": 1800,
                            "End": true
                        }
                    }
                }
            ],
            "Next": "10-register-proxy-website-locator-parent"
        },
        "10-register-proxy-website-locator-parent": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "10-register-proxy-website-locator",
                    "States": {
                        "10-register-proxy-website-locator": {
                            "Type": "Task",
                            "Resource": "${lambda-10-register-proxy-website-locator}",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "10-wait-for-job-completion",
                    "States": {
                        "10-wait-for-job-completion": {
                            "Type": "Task",
                            "Resource": "${job-completion-activity}",
                            "TimeoutSeconds": 3600,
                            "HeartbeatSeconds": 1800,
                            "End": true
                        }
                    }
                }
            ],
            "Next": "11-start-ai-workflow-parent"
        },
        "11-start-ai-workflow-parent": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "11-start-ai-workflow",
                    "States": {
                        "11-start-ai-workflow": {
                            "Type": "Task",
                            "Resource": "${lambda-11-start-ai-workflow}",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "11-wait-for-job-completion",
                    "States": {
                        "11-wait-for-job-completion": {
                            "Type": "Task",
                            "Resource": "${job-completion-activity}",
                            "TimeoutSeconds": 3600,
                            "HeartbeatSeconds": 1800,
                            "End": true
                        }
                    }
                }
            ],
            "End": true
        }
    }
}