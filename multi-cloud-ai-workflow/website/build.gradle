def packageJsonFile = file('package.json');
def packageJson = new groovy.json.JsonSlurper().parseText(packageJsonFile.text);

def requiredVersionNodeJS = "8.10.0"
def requiredVersionAngularCLI = packageJson.devDependencies["@angular/cli"]

def getVersionNodeJS = { ->
    def stdout = new ByteArrayOutputStream();
    def stderr = new ByteArrayOutputStream();
    try {
        exec {
            commandLine "node"
            args "--version"
            standardOutput stdout
            errorOutput stderr
        }
    } catch (Exception ex) {}

    return stdout.toString().trim().replace("v", "")
}

def getVersionAngularCLI = { ->
    def stdout = new ByteArrayOutputStream();
    def stderr = new ByteArrayOutputStream();
    try {
        exec {
            commandLine "cmd", "/c", "npm"
            args "list", "-g", "@angular/cli"
            standardOutput stdout
            errorOutput stderr
        }
    } catch (Exception ex) {}
    def outputParts = stdout.toString().trim().split("@");
    if (outputParts.length == 3) {
        return outputParts[2];
    }
    return ""
}

task installNodeJS {
    inputs.property("VERSION_NODE_JS", requiredVersionNodeJS)
    outputs.upToDateWhen { getVersionNodeJS() == requiredVersionNodeJS }
    doLast {
        if (getVersionNodeJS() != requiredVersionNodeJS) {
            throw new Exception("Required Node version " + requiredVersionNodeJS + " not installed");
        }      
    }
}

task installAngularCLI {
    dependsOn installNodeJS
    inputs.property("VERSION_ANGULAR_CLI", requiredVersionAngularCLI);
    outputs.upToDateWhen { getVersionAngularCLI() == requiredVersionAngularCLI }
    doLast {
        if (getVersionAngularCLI() != requiredVersionAngularCLI) {
            println getVersionAngularCLI()
            println "is not equal to" + requiredVersionAngularCLI

            exec {
                commandLine "cmd", "/c", "npm"
                args "install", "-g", "@angular/cli@$requiredVersionAngularCLI"
            }
        }
    }
}

task npmInstall (type: Exec) {
    dependsOn installNodeJS
    inputs.file("package.json")
    inputs.file("package-lock.json")
    outputs.dir("node_modules")
    commandLine "cmd", "/c", "npm"
    args "install"
}

task build (type: Exec) {
    dependsOn npmInstall, installAngularCLI
    inputs.dir("src")
    outputs.dir("dist")
    commandLine "cmd", "/c", "ng"
    args "build", "--prod", "--base-href", "./", "--progress", "false"
}

task clean (type:Delete) {
    delete "dist"
    delete "node_modules"
}
